apiVersion: greptime.io/v1alpha1
kind: GreptimeDBCluster
metadata:
  name: test02
  namespace: default
spec:
  version: latest
  initializer:
    image: greptime/greptimedb-initializer:latest
  httpPort: 4000
  rpcPort: 4001
  mysqlPort: 4002
  postgreSQLPort: 4003
  wal:
    kafka:
      brokerEndpoints:
        - kafka.default:9092
  base:
    main:
      image: greptime/greptimedb:latest
      livenessProbe:
        httpGet:
          path: /health
          port: 4000
  frontend:
    replicas: 1
    service:
      type: ClusterIP
    logging:
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
      logFormat: text
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
  meta:
    etcdEndpoints:
      - etcd.etcd-cluster.svc.cluster.local:2379
    # Should be true if wal.kafka is set.
    enableRegionFailover: true
    httpPort: 4000
    rpcPort: 3002
    replicas: 1
    logging:
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
      logFormat: text
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
  datanode:
    httpPort: 4000
    rpcPort: 4001
    replicas: 1
    logging:
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
      logFormat: text
    storage:
      dataHome: /data/greptimedb
      fs:
        name: datanode
        mountPath: /data/greptimedb
        storageRetainPolicy: Retain
        storageSize: 10Gi
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
