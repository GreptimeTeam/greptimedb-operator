apiVersion: greptime.io/v1alpha1
kind: GreptimeDBCluster
metadata:
  name: test02
  namespace: default
spec:
  base:
    main:
      image: greptime/greptimedb:latest
      livenessProbe:
        httpGet:
          path: /health
          port: 4000
  version: latest
  initializer:
    image: greptime/greptimedb-initializer:latest
  httpPort: 4000
  rpcPort: 4001
  mysqlPort: 4002
  postgreSQLPort: 4003
  objectStorage:
    s3:
      bucket: greptimedb
      endpoint: s3.amazonaws.com
      region: us-west-2
      root: /greptimedb
      secretName: s3-credentials
  logging:
    format: json
    level: info
    logsDir: /data/greptimedb/logs
    onlyLogToStdout: false
    persistentWithData: false
  frontend:
    replicas: 1
    service:
      type: ClusterIP
    logging:
      format: json
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
  meta:
    etcdEndpoints:
      - etcd.etcd-cluster.svc.cluster.local:2379
    # Should be true if wal.kafka is set.
    enableRegionFailover: false
    logging:
      format: json
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
    httpPort: 4000
    rpcPort: 3002
    replicas: 1
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
  datanode:
    httpPort: 4000
    rpcPort: 4001
    replicas: 1
    storage:
      dataHome: /data/greptimedb
      fs:
        name: datanode
        mountPath: /data/greptimedb
        storageRetainPolicy: Retain
        storageSize: 10Gi
    logging:
      format: json
      level: info
      logsDir: /data/greptimedb/logs
      onlyLogToStdout: false
      persistentWithData: false
    template:
      main:
        image: greptime/greptimedb:latest
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
  monitoring:
    enabled: true
    logsCollection: {}
    standalone:
      base:
        main:
          image: greptime/greptimedb:latest
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
      datanodeStorage:
        dataHome: /data/greptimedb
        fs:
          mountPath: /data/greptimedb
          name: datanode
          storageRetainPolicy: Retain
          storageSize: 10Gi
      httpPort: 4000
      logging:
        format: text
        level: info
        logsDir: /data/greptimedb/logs
        onlyLogToStdout: false
        persistentWithData: false
      mysqlPort: 4002
      objectStorage:
        s3:
          bucket: greptimedb
          endpoint: s3.amazonaws.com
          region: us-west-2
          root: /greptimedb/monitoring
          secretName: s3-credentials
      postgreSQLPort: 4003
      rpcPort: 4001
      service:
        type: ClusterIP
      version: latest
    vector:
      image: timberio/vector:nightly-alpine
      resource:
        limits:
          cpu: 50m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 128Mi
