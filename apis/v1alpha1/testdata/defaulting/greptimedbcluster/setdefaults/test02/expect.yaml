apiVersion: greptime.io/v1alpha1
kind: GreptimeDBCluster
metadata:
  name: test02
  namespace: default
spec:
  version: latest
  initializer:
    image: greptime/greptimedb-initializer:latest
  httpPort: 4000
  rpcPort: 4001
  mysqlPort: 4002
  postgreSQLPort: 4003
  wal:
    kafka:
      brokerEndpoints:
        - kafka.default:9092
  objectStorage:
    s3:
      bucket: greptimedb
      endpoint: s3.amazonaws.com
      region: us-west-2
      root: /greptimedb
      secretName: s3-credentials
  logging:
    format: text
    level: info
    logsDir: /data/greptimedb/logs
    onlyLogToStdout: false
    persistentWithData: false
  base:
    main:
      image: greptime/greptimedb:latest
      livenessProbe:
        httpGet:
          path: /health
          port: 4000
        periodSeconds: 5
        failureThreshold: 10
      readinessProbe:
        httpGet:
          path: /health
          port: 4000
        periodSeconds: 5
        failureThreshold: 10
      startupProbe:
        httpGet:
          path: /health
          port: 4000
        periodSeconds: 5
        failureThreshold: 60
  frontend:
    replicas: 1
    httpPort: 4000
    mysqlPort: 4002
    postgreSQLPort: 4003
    rpcPort: 4001
    service:
      type: ClusterIP
    logging: {}
    tracing: {}
    template: {}
    internal: {}
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
    slowQuery:
      enabled: true
      recordType: system_table
      sampleRatio: "1.0"
      threshold: 30s
      ttl: 90d
  meta:
    backendStorage:
      etcd:
        endpoints:
          - etcd.etcd-cluster.svc.cluster.local:2379
    enableRegionFailover: false
    logging: {}
    tracing: {}
    httpPort: 4000
    rpcPort: 3002
    replicas: 1
    template: {}
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  datanode:
    httpPort: 4000
    rpcPort: 4001
    replicas: 1
    logging: {}
    tracing: {}
    storage:
      dataHome: /data/greptimedb
      fs:
        name: datanode
        mountPath: /data/greptimedb
        storageRetainPolicy: Retain
        storageSize: 10Gi
    template: {}
    rollingUpdate:
      maxUnavailable: 1
      partition: 0
