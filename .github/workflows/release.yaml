name: Release
on: [push, pull_request]
#on:
#  push:
#    tags:
#      - '*'
#  pull_request:
#    tags:
#      - '*'

#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: ${{ github.repository }}

jobs:
#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push
#        uses: docker/build-push-action@v3
#        with:
#          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

#      - name: Run chart-releaser
#        uses: helm/chart-releaser-action@v1.4.1
#        with:
#          charts_dir: ./charts/greptimedb-operator
#        env:
#          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Package Charts
        run: |
          helm package ./charts/greptimedb-operator
          helm package ./charts/greptimedb

      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
        with:
          tag_name: ${{ github.ref }} # (tag)标签名称
          release_name: Release ${{ github.ref }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布

            # 第四步：上传构建结果到 Release（把打包的tgz上传到Release）
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
          asset_path: |
            ./greptimedb-0.1.0.tgz # 要上传文件
            ./greptimedb-operator-0.1.0.tgz
          asset_name: |
            greptimedb-0.1.0.tgz # 上传后的文件名
            greptimedb-operator-0.1.0.tgz
          asset_content_type: application/x-tgz

#      - name: Create Release and Upload Release Asset
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          tag_name: ${{ github.ref }}
#          name: Release ${{ github.ref }}
#          body: TODO New Release.
#          draft: false
#          prerelease: false
#          files: |
#            greptimedb-0.1.0.tgz
#            greptimedb-operator-0.1.0.tgz
