name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build the project
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.3.0
        with:
          version: v1.50.0
          args: --timeout 10m0s

      - name: Check code generation
        run: |
          make check-code-generation

      - name: Compile the project
        run: |
          make

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: Run the unit tests
        run: |
          make test

  e2e:
    name: Run e2e
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run e2e
        id: e2e
        run: |
          make e2e

      - name: Print debug message if e2e failed
        if: ${{ failure() && steps.e2e.conclusion == 'failure' }}
        run: |
          # printf the host info.
          uname -a
          kind version
          kubectl version
          go version
          
          # get K8s resource info.
          kubectl get all -A
          kubectl get pvc
          
          # dump logs
          echo "==> metasrv logging"
          kubectl logs `kubectl get po | grep meta | awk '{print $1}'`
          echo "<== metasrv logging"
          
          echo "==> frontend logging"
          kubectl logs `kubectl get po | grep frontend | awk '{print $1}'`
          echo "<== frontend logging"
          
          echo "==> e2e-cluster-datanode-0 logging"
          kubectl logs e2e-cluster-datanode-0
          echo "<== e2e-cluster-datanode-0 logging"
          
          echo "==> e2e-cluster-datanode-1 logging"
          kubectl logs e2e-cluster-datanode-1
          echo "<== e2e-cluster-datanode-1 logging"
          
          echo "==> e2e-cluster-datanode-2 logging"
          kubectl logs e2e-cluster-datanode-2
          echo "<== e2e-cluster-datanode-2 logging"
