name: ci
on: [push, pull_request]
env:
  HUB_REPO: ghcr.io/greptimeteam
  IMAGE_NAME: greptimedb-operator
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: Format check
        run: |
          make fmt-check

      - name: Check code generation
        run: |
          make check-code-generation

      - name: Build the project
        run: |
          make
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: Run the unit tests
        run: |
          make test
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18.4"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run e2e
        run: |
          make e2e
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Version
        run: echo VERSION=`git describe --tags --always` >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            HUB_REPO=${{ env.HUB_REPO }}
            VERSION=${{ env.VERSION }}
          tags: ${{ env.HUB_REPO }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
